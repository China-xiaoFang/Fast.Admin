<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.Serialization</name>
    </assembly>
    <members>
        <member name="T:Fast.NET.ExceptorContext">
            <summary>
            <see cref="T:Fast.NET.ExceptorContext"/> 异常上下文
            </summary>
        </member>
        <member name="M:Fast.NET.ExceptorContext.GetExceptionMetadata(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            获取异常元数据
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/></param>
            <returns><see cref="T:Fast.NET.ExceptionMetadata"/></returns>
        </member>
        <member name="T:Fast.NET.ValidatorContext">
            <summary>
            <see cref="T:Fast.NET.ValidatorContext"/> 验证上下文
            </summary>
        </member>
        <member name="M:Fast.NET.ValidatorContext.GetValidationMetadata(System.Object)">
            <summary>
            获取验证错误信息
            </summary>
            <param name="errors"><see cref="T:System.Object"/></param>
            <returns><see cref="T:Fast.NET.ValidationMetadata"/></returns>
        </member>
        <member name="T:Fast.NET.InternalConvertExtension">
            <summary>
            <see cref="T:System.Convert"/> 内部转换拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.DateTimeOffset)">
            <summary>
            将 DateTimeOffset 转换成本地 DateTime
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>
            将 DateTimeOffset? 转换成本地 DateTime?
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="T:Fast.NET.InternalHttpContextExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.IsWebSocketRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是 WebSocket 请求
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.GetMetadata``1(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取 Action 特性
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalMethodInfoExtension">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.IsAsync(System.Reflection.MethodInfo)">
            <summary>
            判断方法是否是异步
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetRealReturnType(System.Reflection.MethodInfo)">
            <summary>
            获取方法真实返回类型
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetFoundAttribute``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            查找方法指定特性，如果没找到则继续查找声明类
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="method"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalTypeExtension">
            <summary>
            <see cref="T:System.Type"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.HasImplementedRawGeneric(System.Type,System.Type)">
            <summary>
            判断类型是否实现某个泛型
            </summary>
            <param name="type"><see cref="T:System.Type"/> 类型</param>
            <param name="generic"><see cref="T:System.Type"/>泛型类型</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Fast.NET.InternalAssemblyUtil">
            <summary>
            <see cref="T:System.Reflection.Assembly"/> 工具类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalAssemblyUtil.GetEntryAssembly(System.Boolean)">
            <summary>
            获取入口程序集
            </summary>
            <param name="referenced"><see cref="T:System.Boolean"/> 是否包含引用的，默认为 true</param>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:Fast.NET.InternalAssemblyUtil.GetAssemblyTypes(System.Reflection.Assembly,System.Func{System.Type,System.Boolean})">
            <summary>
            获取程序集中所有类型
            </summary>
            <remarks>这里默认获取所有 Public 声明的</remarks>
            <param name="assembly"><see cref="T:System.Reflection.Assembly"/> 程序集</param>
            <param name="typeFilter"><see cref="T:System.Func`1"/> 类型过滤条件</param>
            <returns></returns>
        </member>
        <member name="T:Fast.Serialization.Extensions.SerializationExtension">
            <summary>
            <see cref="T:Fast.Serialization.Extensions.SerializationExtension"/> 序列化拓展类
            </summary>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.ToObject``1(System.String)">
            <summary>
            JSON 字符串转 Object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"><see cref="T:System.String"/> 需要序列化的 JSON 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.ToObject(System.String,System.Type)">
            <summary>
            JSON 字符串转 Object
            </summary>
            <param name="json"><see cref="T:System.String"/> 需要序列化的 JSON 字符串</param>
            <param name="type"><see cref="T:System.Type"/> 需要序列化成的类型</param>
            <returns><see cref="T:System.Object"/> 序列化后的对象</returns>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.ToJsonString(System.Object)">
            <summary>
            Object 转 JSON字符串
            </summary>
            <param name="obj"><see cref="T:System.Object"/> 需要反序列化的对象</param>
            <returns><see cref="T:System.String"/> 反序列化后的 JSON 字符串</returns>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Dictionary 字符串转 Object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dictionary"><see cref="T:System.Collections.IDictionary"/> 需要序列化的字典</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            Dictionary 字符串转 Object
            </summary>
            <param name="dictionary"><see cref="T:System.Collections.IDictionary"/> 需要序列化的字典</param>
            <param name="type"><see cref="T:System.Type"/> 需要序列化成的类型</param>
            <returns><see cref="T:System.Object"/> 序列化后的对象</returns>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationExtension.DeepCopy``1(``0)">
            <summary>
            深度拷贝
            </summary>
            <remarks>此方法是通过将对象序列化成 JSON 字符串，再将 JSON 字符串反序列化成对象，所以性能不是很高，如果介意，请慎用</remarks>
            <typeparam name="T"></typeparam>
            <param name="source">需要拷贝的对象</param>
            <returns></returns>
        </member>
        <member name="T:Fast.Serialization.Extensions.SerializationIServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.Serialization.Extensions.SerializationIServiceCollectionExtension.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            添加JSON序列化配置
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="dateTimeFormat"><see cref="T:System.String"/> DateTime 和 DateTimeOffset 格式化字符串，默认 "yyyy-MM-dd HH:mm:ss"</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.DateJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.DateJsonConverter"/> Datetime 类型Json返回日期处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DateJsonConverter.Format">
            <summary>
            日期格式化
            默认：yyyy-MM-dd
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableDateJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableDateJsonConverter"/> Datetime? 类型Json返回日期处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDateJsonConverter.Format">
            <summary>
            日期格式化
            默认：yyyy-MM-dd
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.DateTimeJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.DateTimeJsonConverter"/> DateTime 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DateTimeJsonConverter.Format">
            <summary>
            格式化
            默认：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateTimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateTimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableDateTimeJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableDateTimeJsonConverter"/> DateTime? 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDateTimeJsonConverter.Format">
            <summary>
            格式化
            默认：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateTimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateTimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter"/> DateTimeOffset 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter.Format">
            <summary>
            格式化
            默认：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter.Localized">
            <summary>
            是否输出为为当地时间
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="format"></param>
            <param name="outputToLocalDateTime"></param>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTimeOffset"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DateTimeOffsetJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter"/> DateTimeOffset? 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter.Format">
            <summary>
            格式化
            默认：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter.Localized">
            <summary>
            是否输出为为当地时间
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="format"></param>
            <param name="outputToLocalDateTime"></param>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTimeOffset"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDateTimeOffsetJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTimeOffset},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.DecimalJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.DecimalJsonConverter"/> decimal 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DecimalJsonConverter.Places">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DecimalJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Decimal"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DecimalJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Decimal,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableDecimalJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableDecimalJsonConverter"/> decimal? 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDecimalJsonConverter.Places">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDecimalJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Decimal"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDecimalJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Decimal},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.DoubleJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.DoubleJsonConverter"/> double 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.DoubleJsonConverter.Places">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DoubleJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Double"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.DoubleJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Double,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableDoubleJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableDoubleJsonConverter"/> double? 类型Json返回处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableDoubleJsonConverter.Places">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDoubleJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Double"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableDoubleJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Double},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.IntJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.IntJsonConverter"/> int 类型Json返回处理
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.IntJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Int32"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.IntJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int32,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableIntJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableIntJsonConverter"/> int? 类型Json返回处理
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableIntJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Int32"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableIntJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Int32},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.LongJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.LongJsonConverter"/> Long 类型Json返回处理
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.LongJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Int64"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.LongJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableLongJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableLongJsonConverter"/> Long? 类型Json返回处理
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableLongJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.Int64"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableLongJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Int64},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.TimeJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.TimeJsonConverter"/> Datetime 类型Json返回时间处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.TimeJsonConverter.Format">
            <summary>
            日期格式化
            默认：HH:mm:ss
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.TimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.TimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Fast.Serialization.JsonConverter.NullableTimeJsonConverter">
            <summary>
            <see cref="T:Fast.Serialization.JsonConverter.NullableTimeJsonConverter"/> Datetime? 类型Json返回时间处理
            </summary>
        </member>
        <member name="P:Fast.Serialization.JsonConverter.NullableTimeJsonConverter.Format">
            <summary>
            日期格式化
            默认：HH:mm:ss
            </summary>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableTimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <see cref="T:System.DateTime"/>.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fast.Serialization.JsonConverter.NullableTimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
    </members>
</doc>
