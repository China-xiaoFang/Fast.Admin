<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.NET.Core</name>
    </assembly>
    <members>
        <member name="T:Fast.NET.InternalSuppressSnifferAttribute">
            <summary>
            <see cref="T:Fast.NET.InternalSuppressSnifferAttribute"/> 内部不被扫描和发现的特性
            </summary>
            <remarks>用于程序集扫描类型或方法时候</remarks>
        </member>
        <member name="T:Fast.NET.InternalConstant">
            <summary>
            <see cref="T:Fast.NET.InternalConstant"/> 内部常用常量
            </summary>
        </member>
        <member name="P:Fast.NET.InternalConstant.DefaultTime">
            <summary>
            默认DateTime
            </summary>
        </member>
        <member name="P:Fast.NET.InternalConstant.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Fast.NET.InternalConstant.SqlServerMinTime">
            <summary>
            Sql Server 最小时间
            </summary>
        </member>
        <member name="P:Fast.NET.InternalConstant.SqlServerMaxTime">
            <summary>
            Sql Server 最大时间
            </summary>
        </member>
        <member name="T:Fast.NET.InternalPenetrates">
            <summary>
            <see cref="T:Fast.NET.InternalPenetrates"/> 内部常量，公共方法配置类
            </summary>
        </member>
        <member name="F:Fast.NET.InternalPenetrates.Assemblies">
            <summary>
            应用有效程序集
            </summary>
        </member>
        <member name="F:Fast.NET.InternalPenetrates.EffectiveTypes">
            <summary>
            有效程序集类型
            </summary>
        </member>
        <member name="M:Fast.NET.InternalPenetrates.CatchOrDefault``1(System.Func{``0},``0)">
            <summary>
            处理获取对象异常问题
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="action">获取对象委托</param>
            <param name="defaultValue">默认值</param>
            <returns>T</returns>
        </member>
        <member name="M:Fast.NET.InternalPenetrates.GetThreadId">
            <summary>
            获取当前线程 Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.InternalPenetrates.GetExecutionTime(System.Action)">
            <summary>
            获取一段代码执行耗时
            </summary>
            <param name="action">委托</param>
            <returns><see cref="T:System.Int64"/></returns>
        </member>
        <member name="T:Fast.NET.InternalAssemblyExtension">
            <summary>
            <see cref="T:System.Reflection.Assembly"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalAssemblyExtension.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
            获取程序集名称
            </summary>
            <param name="assembly"><see cref="T:System.Reflection.Assembly"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Fast.NET.InternalConvertExtension">
            <summary>
            <see cref="T:System.Convert"/> 内部转换拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.DateTimeOffset)">
            <summary>
            将 DateTimeOffset 转换成本地 DateTime
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>
            将 DateTimeOffset? 转换成本地 DateTime?
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="T:Fast.NET.InternalHttpContextExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.IsWebSocketRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是 WebSocket 请求
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.GetMetadata``1(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取 Action 特性
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.GetMetadata(Microsoft.AspNetCore.Http.EndpointMetadataCollection,System.Type)">
            <summary>
            获取 Action 特性
            </summary>
            <param name="metadata"><see cref="T:Microsoft.AspNetCore.Http.EndpointMetadataCollection"/></param>
            <param name="attributeType"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.GetMetadata(Microsoft.AspNetCore.Http.HttpContext,System.Type)">
            <summary>
            获取 Action 特性
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="attributeType"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="T:Fast.NET.InternalMethodInfoExtension">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.IsAsync(System.Reflection.MethodInfo)">
            <summary>
            判断方法是否是异步
            </summary>
            <param name="methodInfo"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetRealReturnType(System.Reflection.MethodInfo)">
            <summary>
            获取方法真实返回类型
            </summary>
            <param name="methodInfo"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetFoundAttribute``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            查找方法指定特性，如果没找到则继续查找声明类
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="methodInfo"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetFoundAttribute(System.Reflection.MethodInfo,System.Type,System.Boolean)">
            <summary>
            查找方法指定特性，如果没找到则继续查找声明类
            </summary>
            <param name="methodInfo"></param>
            <param name="attributeType"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalObjectExtension">
            <summary>
            <see cref="T:System.Object"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalObjectExtension.ChangeType(System.Object,System.Type)">
            <summary>
            将一个对象转换为指定类型
            </summary>
            <param name="obj">待转换的对象</param>
            <param name="type">目标类型</param>
            <returns>转换后的对象</returns>
        </member>
        <member name="T:Fast.NET.InternalStringExtension">
            <summary>
            <see cref="T:System.String"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalStringExtension.FirstCharToUpper(System.String)">
            <summary>
            字符串首字母大写
            </summary>
            <param name="str"><see cref="T:System.String"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.InternalStringExtension.FirstCharToLower(System.String)">
            <summary>
            字符串首字母小写
            </summary>
            <param name="str"><see cref="T:System.String"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.InternalStringExtension.SplitCamelCase(System.String)">
            <summary>
            切割骆驼命名式字符串
            </summary>
            <param name="str"><see cref="T:System.String"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Fast.NET.InternalTypeExtension">
            <summary>
            <see cref="T:System.Type"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.HasImplementedRawGeneric(System.Type,System.Type)">
            <summary>
            判断类型是否实现某个泛型
            </summary>
            <param name="type"><see cref="T:System.Type"/> 类型</param>
            <param name="generic"><see cref="T:System.Type"/>泛型类型</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.GetAssemblyName(System.Type)">
            <summary>
            获取类型所在程序集名称
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.GetAssemblyName(System.Reflection.TypeInfo)">
            <summary>
            获取类型所在程序集名称
            </summary>
            <param name="typeInfo"><see cref="T:System.Reflection.TypeInfo"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.IsRichPrimitive(System.Type)">
            <summary>
            判断是否是富基元类型
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.IsValueTuple(System.Type)">
            <summary>
            判断是否是元组类型
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Fast.NET.Reflect">
            <summary>
            内部反射静态类
            </summary>
        </member>
        <member name="M:Fast.NET.Reflect.GetEntryAssembly">
            <summary>
            获取入口程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetAssembly(System.String)">
            <summary>
            根据程序集名称获取运行时程序集
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.LoadAssembly(System.String)">
            <summary>
            根据路径加载程序集
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.LoadAssembly(System.IO.MemoryStream)">
            <summary>
            通过流加载程序集
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetType(System.String,System.String)">
            <summary>
            根据程序集名称、类型完整限定名获取运行时类型
            </summary>
            <param name="assemblyName"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetType(System.Reflection.Assembly,System.String)">
            <summary>
            根据程序集和类型完全限定名获取运行时类型
            </summary>
            <param name="assembly"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetType(System.IO.MemoryStream,System.String)">
            <summary>
            根据程序集和类型完全限定名获取运行时类型
            </summary>
            <param name="assembly"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
            获取程序集名称
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetAssemblyName(System.Type)">
            <summary>
            获取程序集名称
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetAssemblyName(System.Reflection.TypeInfo)">
            <summary>
            获取程序集名称
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Reflect.GetStringType(System.String)">
            <summary>
            加载程序集类型，支持格式：程序集;网站类型命名空间
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalAssemblyUtil">
            <summary>
            <see cref="T:System.Reflection.Assembly"/> 工具类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalAssemblyUtil.GetEntryAssembly(System.Boolean)">
            <summary>
            获取入口程序集
            </summary>
            <param name="referenced"><see cref="T:System.Boolean"/> 是否包含引用的，默认为 true</param>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:Fast.NET.InternalAssemblyUtil.GetAssemblyTypes(System.Reflection.Assembly,System.Func{System.Type,System.Boolean})">
            <summary>
            获取程序集中所有类型
            </summary>
            <remarks>这里默认获取所有 Public 声明的</remarks>
            <param name="assembly"><see cref="T:System.Reflection.Assembly"/> 程序集</param>
            <param name="typeFilter"><see cref="T:System.Func`1"/> 类型过滤条件</param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.App">
            <summary>
            <see cref="T:Fast.NET.Core.App"/> App 上下文
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.Configuration">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.WebHostEnvironment">
            <summary>
            获取Web主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.HostEnvironment">
            <summary>
            获取主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.InternalServices">
            <summary>
            应用服务
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.RootServices">
            <summary>
            存储根服务，可能为空
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.Assemblies">
            <summary>
            应用有效程序集
            </summary>
        </member>
        <member name="F:Fast.NET.Core.App.EffectiveTypes">
            <summary>
            有效程序集类型
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.HttpContext">
            <summary>
            请求上下文
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.UnmanagedObjects">
            <summary>
            未托管的对象集合
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.InternalConfigurationScanDirectories">
            <summary>
            默认配置文件扫描目录
            </summary>
        </member>
        <member name="F:Fast.NET.Core.App.GC_COLLECT_INTERVAL_SECONDS">
            <summary>
            GC 回收默认间隔
            </summary>
        </member>
        <member name="P:Fast.NET.Core.App.LastGCCollectTime">
            <summary>
            记录最近 GC 回收时间
            </summary>
        </member>
        <member name="M:Fast.NET.Core.App.GetServiceProvider(System.Type)">
            <summary>
            解析服务提供器
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetServices``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetServices(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetRequiredService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetRequiredService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetConfig``1(System.String)">
            <summary>
            获取配置
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <param name="path">配置中对应的Key</param>
            <returns>TOptions</returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetThreadId">
            <summary>
            获取当前线程 Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetTraceId">
            <summary>
            获取当前请求 TraceId
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetExecutionTime(System.Action)">
            <summary>
            获取一段代码执行耗时
            </summary>
            <param name="action">委托</param>
            <returns><see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Fast.NET.Core.App.GetServiceLifetime(System.Type)">
            <summary>
            获取服务注册的生命周期类型
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.App.DisposeUnmanagedObjects">
            <summary>
            释放所有未托管的对象
            </summary>
        </member>
        <member name="M:Fast.NET.Core.App.ConfigureApplication(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            配置 Application
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Fast.NET.Core.App.AddJsonFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加 JSON 文件
            </summary>
            <param name="configurationBuilder"></param>
            <param name="hostEnvironment"></param>
        </member>
        <member name="F:Fast.NET.Core.App.excludeJsonPrefixArr">
            <summary>
            排除的配置文件前缀
            </summary>
        </member>
        <member name="F:Fast.NET.Core.App.runtimeJsonSuffixArr">
            <summary>
            排除运行时 Json 后缀
            </summary>
        </member>
        <member name="M:Fast.NET.Core.App.SplitConfigFileNameToGroups(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            对配置文件名进行分组
            </summary>
            <param name="configFiles"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.InternalApp">
            <summary>
            <see cref="T:Fast.NET.Core.InternalApp"/> 内部 App 上下文
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.InternalServices">
            <summary>
            应用服务
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.RootServices">
            <summary>
            根服务
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.Configuration">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.WebHostEnvironment">
            <summary>
            获取Web主机环境
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.HostEnvironment">
            <summary>
            获取主机环境
            </summary>
        </member>
        <member name="F:Fast.NET.Core.InternalApp.UnmanagedObjects">
            <summary>
            未托管的对象集合
            </summary>
        </member>
        <member name="M:Fast.NET.Core.InternalApp.GetTraceId">
            <summary>
            获取当前请求 TraceId
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.Attributes.FastEnumAttribute">
            <summary>
            <see cref="T:Fast.NET.Core.Attributes.FastEnumAttribute"/> 枚举特性
            </summary>
            <remarks>用于区分是否可以写入枚举字典的特性</remarks>
        </member>
        <member name="P:Fast.NET.Core.Attributes.FastEnumAttribute.ChName">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Attributes.FastEnumAttribute.EnName">
            <summary>
            英文名称
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Attributes.FastEnumAttribute.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Fast.NET.Core.Attributes.SuppressSnifferAttribute">
            <summary>
            <see cref="T:Fast.NET.Core.Attributes.SuppressSnifferAttribute"/> 不被扫描和发现的特性
            </summary>
            <remarks>用于程序集扫描类型或方法时候</remarks>
        </member>
        <member name="T:Fast.NET.Core.Constant.GlobalConstant">
            <summary>
            <see cref="T:Fast.NET.Core.Constant.GlobalConstant"/> 常用常量
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Constant.GlobalConstant.DefaultTime">
            <summary>
            默认DateTime
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Constant.GlobalConstant.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Constant.GlobalConstant.SqlServerMinTime">
            <summary>
            Sql Server 最小时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Constant.GlobalConstant.SqlServerMaxTime">
            <summary>
            Sql Server 最大时间
            </summary>
        </member>
        <member name="T:Fast.NET.Core.Diagnostics.Debugging">
            <summary>
            <see cref="T:Fast.NET.Core.Diagnostics.Debugging"/> 向事件管理器中输出事件信息
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.WriteLine(System.Int32,System.String)">
            <summary>
            输出一行事件信息
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.WriteLine(System.Int32,System.String,System.Object[])">
            <summary>
            输出一行事件信息
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Trace(System.String)">
            <summary>
            输出跟踪级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Trace(System.String,System.Object[])">
            <summary>
            输出跟踪级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Info(System.String)">
            <summary>
            输出信息级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Info(System.String,System.Object[])">
            <summary>
            输出信息级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Warn(System.String)">
            <summary>
            输出警告级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Warn(System.String,System.Object[])">
            <summary>
            输出警告级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Error(System.String)">
            <summary>
            输出错误级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Error(System.String,System.Object[])">
            <summary>
            输出错误级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.File(System.String)">
            <summary>
            输出文件级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.File(System.String,System.Object[])">
            <summary>
            输出文件级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Tip(System.String)">
            <summary>
            输出提示级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Tip(System.String,System.Object[])">
            <summary>
            输出提示级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Search(System.String)">
            <summary>
            输出搜索级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Search(System.String,System.Object[])">
            <summary>
            输出搜索级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Clock(System.String)">
            <summary>
            输出时钟级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.Clock(System.String,System.Object[])">
            <summary>
            输出时钟级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Core.Diagnostics.Debugging.GetLevelEmoji(System.Int32)">
            <summary>
            获取信息级别对应的 emoji
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Fast.NET.Core.Enum.AppEnvironmentEnum">
            <summary>
            App运行环境枚举
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.AppEnvironmentEnum.PC">
            <summary>
            PC
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.AppEnvironmentEnum.Windows">
            <summary>
            Windows端
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.AppEnvironmentEnum.App">
            <summary>
            App端
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.AppEnvironmentEnum.H5">
            <summary>
            H5
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.AppEnvironmentEnum.WeChatMiniProgram">
            <summary>
            微信小程序
            </summary>
        </member>
        <member name="T:Fast.NET.Core.Enum.HttpRequestActionEnum">
            <summary>
            Http请求行为枚举
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Auth">
            <summary>
            登录
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Page">
            <summary>
            分页查询
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Detail">
            <summary>
            详情
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Add">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Download">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Upload">
            <summary>
            上传
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Export">
            <summary>
            导出
            </summary>
        </member>
        <member name="F:Fast.NET.Core.Enum.HttpRequestActionEnum.Import">
            <summary>
            导入
            </summary>
        </member>
        <member name="T:Fast.NET.Core.Extensions.IApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IApplicationBuilderExtension.EnableBuffering(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用 Body 重复读功能
            </summary>
            <remarks>须在 app.UseRouting() 之前注册</remarks>
            <param name="app"><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IApplicationBuilderExtension.UseApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            添加应用中间件
            </summary>
            <param name="app"><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>应用构建器</param>
            <param name="configure">应用配置</param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>应用构建器</returns>
        </member>
        <member name="T:Fast.NET.Core.Extensions.IConfigurationExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IConfigurationExtension.Reload(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            刷新配置对象
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <returns><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></returns>
        </member>
        <member name="T:Fast.NET.Core.Extensions.InternalIServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Extensions.InternalIServiceCollectionExtension.AddCorsAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加跨域配置
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.InternalIServiceCollectionExtension.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加JSON序列化配置
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.InternalIServiceCollectionExtension.AddInnerDependencyInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加全局依赖注入
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.InternalIServiceCollectionExtension.AddObjectMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加对象映射
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.Extensions.IServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IServiceCollectionExtension.AddGzipBrotliCompression(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Gzip Brotli 压缩
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IServiceCollectionExtension.AddMvcFilter``1(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            注册 Mvc 过滤器
            </summary>
            <typeparam name="TFilter"></typeparam>
            <param name="mvcBuilder"><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/></param>
            <param name="configure"></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IServiceCollectionExtension.AddMvcFilter``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            注册 Mvc 过滤器
            </summary>
            <typeparam name="TFilter"></typeparam>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configure"></param>
            <returns>&lt;see cref="IServiceCollection"/&gt;</returns>
        </member>
        <member name="M:Fast.NET.Core.Extensions.IServiceCollectionExtension.AddMvcFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            注册 Mvc 过滤器
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="filter"></param>
            <param name="configure"></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.Extensions.WebApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Extensions.WebApplicationBuilderExtension.Initialize(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            框架初始化
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="T:Fast.NET.Core.Filters.StartupFilter">
            <summary>
            应用启动时自动注册中间件
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Fast.NET.Core.Filters.StartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.RemoteRequest.RemoteRequestUtil">
            <summary>
            远程请求工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequest.RemoteRequestUtil.GetDaySentence">
            <summary>
            得到每日一句
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequest.RemoteRequestUtil.GetWeatherInfo(System.String)">
            <summary>
            得到天气预报
            </summary>
            <param name="cityName"></param>
            <returns></returns>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Picture2">
            <summary>
            图片2
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Caption">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Note">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Content">
            <summary>
            英文内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.ShareImg">
            <summary>
            分享图片
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.DateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Yesterday">
            <summary>
            昨日天气
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Forecast">
            <summary>
            未来五天天气
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Ganmao">
            <summary>
            感冒
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Wendu">
            <summary>
            温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Desc">
            <summary>
            失败描述
            </summary>
        </member>
        <member name="T:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo">
            <summary>
            天气信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Date">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.High">
            <summary>
            最高温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Fengli">
            <summary>
            风力
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Low">
            <summary>
            最低温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Fengxiang">
            <summary>
            分向
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Type">
            <summary>
            类型
            </summary>
        </member>
    </members>
</doc>
