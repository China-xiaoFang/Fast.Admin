<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.DynamicApplication</name>
    </assembly>
    <members>
        <member name="T:Fast.NET.ExceptorContext">
            <summary>
            <see cref="T:Fast.NET.ExceptorContext"/> 异常上下文
            </summary>
        </member>
        <member name="M:Fast.NET.ExceptorContext.GetExceptionMetadata(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            获取异常元数据
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/></param>
            <returns><see cref="T:Fast.NET.ExceptionMetadata"/></returns>
        </member>
        <member name="T:Fast.NET.ValidatorContext">
            <summary>
            <see cref="T:Fast.NET.ValidatorContext"/> 验证上下文
            </summary>
        </member>
        <member name="M:Fast.NET.ValidatorContext.GetValidationMetadata(System.Object)">
            <summary>
            获取验证错误信息
            </summary>
            <param name="errors"><see cref="T:System.Object"/></param>
            <returns><see cref="T:Fast.NET.ValidationMetadata"/></returns>
        </member>
        <member name="T:Fast.NET.InternalConvertExtension">
            <summary>
            <see cref="T:System.Convert"/> 内部转换拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.DateTimeOffset)">
            <summary>
            将 DateTimeOffset 转换成本地 DateTime
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:Fast.NET.InternalConvertExtension.ParseToDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>
            将 DateTimeOffset? 转换成本地 DateTime?
            </summary>
            <param name="dateTime"><see cref="T:System.DateTimeOffset"/></param>
            <returns><see cref="T:System.DateTime"/></returns>
        </member>
        <member name="T:Fast.NET.InternalHttpContextExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.IsWebSocketRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是 WebSocket 请求
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalHttpContextExtension.GetMetadata``1(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取 Action 特性
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalMethodInfoExtension">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.IsAsync(System.Reflection.MethodInfo)">
            <summary>
            判断方法是否是异步
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetRealReturnType(System.Reflection.MethodInfo)">
            <summary>
            获取方法真实返回类型
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Fast.NET.InternalMethodInfoExtension.GetFoundAttribute``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            查找方法指定特性，如果没找到则继续查找声明类
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="method"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.InternalTypeExtension">
            <summary>
            <see cref="T:System.Type"/> 内部拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.InternalTypeExtension.HasImplementedRawGeneric(System.Type,System.Type)">
            <summary>
            判断类型是否实现某个泛型
            </summary>
            <param name="type"><see cref="T:System.Type"/> 类型</param>
            <param name="generic"><see cref="T:System.Type"/>泛型类型</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Fast.NET.FastEnumAttribute">
            <summary>
            <see cref="T:Fast.NET.FastEnumAttribute"/> 枚举特性
            </summary>
            <remarks>用于区分是否可以写入枚举字典的特性</remarks>
        </member>
        <member name="P:Fast.NET.FastEnumAttribute.ChName">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Fast.NET.FastEnumAttribute.EnName">
            <summary>
            英文名称
            </summary>
        </member>
        <member name="P:Fast.NET.FastEnumAttribute.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Fast.NET.SuppressSnifferAttribute">
            <summary>
            <see cref="T:Fast.NET.SuppressSnifferAttribute"/> 不被扫描和发现的特性
            </summary>
            <remarks>用于程序集扫描类型或方法时候</remarks>
        </member>
        <member name="T:Fast.NET.GlobalConstant">
            <summary>
            <see cref="T:Fast.NET.GlobalConstant"/> 常用常量
            </summary>
        </member>
        <member name="P:Fast.NET.GlobalConstant.DefaultTime">
            <summary>
            默认DateTime
            </summary>
        </member>
        <member name="P:Fast.NET.GlobalConstant.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="T:Fast.NET.Debugging">
            <summary>
            <see cref="T:Fast.NET.Debugging"/> 向事件管理器中输出事件信息
            </summary>
        </member>
        <member name="M:Fast.NET.Debugging.WriteLine(System.Int32,System.String)">
            <summary>
            输出一行事件信息
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.WriteLine(System.Int32,System.String,System.Object[])">
            <summary>
            输出一行事件信息
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Trace(System.String)">
            <summary>
            输出跟踪级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Trace(System.String,System.Object[])">
            <summary>
            输出跟踪级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Info(System.String)">
            <summary>
            输出信息级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Info(System.String,System.Object[])">
            <summary>
            输出信息级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Warn(System.String)">
            <summary>
            输出警告级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Warn(System.String,System.Object[])">
            <summary>
            输出警告级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Error(System.String)">
            <summary>
            输出错误级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Error(System.String,System.Object[])">
            <summary>
            输出错误级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.File(System.String)">
            <summary>
            输出文件级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.File(System.String,System.Object[])">
            <summary>
            输出文件级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Tip(System.String)">
            <summary>
            输出提示级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Tip(System.String,System.Object[])">
            <summary>
            输出提示级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Search(System.String)">
            <summary>
            输出搜索级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Search(System.String,System.Object[])">
            <summary>
            输出搜索级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.Clock(System.String)">
            <summary>
            输出时钟级别事件信息
            </summary>
            <param name="message">事件信息</param>
        </member>
        <member name="M:Fast.NET.Debugging.Clock(System.String,System.Object[])">
            <summary>
            输出时钟级别事件信息
            </summary>
            <param name="message">事件信息</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:Fast.NET.Debugging.GetLevelEmoji(System.Int32)">
            <summary>
            获取信息级别对应的 emoji
            </summary>
            <param name="level">
            <para>信息级别</para>
            <list type="number">
            <item>
            <description>跟踪</description>
            </item>
            <item>
            <description>信息</description>
            </item>
            <item>
            <description>警告</description>
            </item>
            <item>
            <description>错误</description>
            </item>
            <item>
            <description>文件</description>
            </item>
            <item>
            <description>提示</description>
            </item>
            <item>
            <description>搜索</description>
            </item>
            <item>
            <description>时钟</description>
            </item>
            </list>
            </param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Fast.NET.AppException">
            <summary>
            <see cref="T:Fast.NET.AppException"/> 应用程序异常类
            </summary>
        </member>
        <member name="M:Fast.NET.AppException.#ctor">
            <summary>
            <inheritdoc cref="T:Fast.NET.AppException" />
            </summary>
        </member>
        <member name="M:Fast.NET.AppException.#ctor(System.String)">
            <summary>
            <inheritdoc cref="T:Fast.NET.AppException" />
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Fast.NET.AppException.#ctor(System.String,System.Object)">
            <summary>
            <inheritdoc cref="T:Fast.NET.AppException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="errorCode">错误编码</param>
        </member>
        <member name="M:Fast.NET.AppException.#ctor(System.String,System.Exception)">
            <summary>
            <inheritdoc cref="T:Fast.NET.AppException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Fast.NET.AppException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            <inheritdoc cref="T:Fast.NET.AppException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="errorCode">错误编码</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="P:Fast.NET.AppException.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.NET.AppException.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.NET.AppException.ErrorMessage">
            <summary>
            错误消息（支持 Object 对象）
            </summary>
        </member>
        <member name="P:Fast.NET.AppException.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.NET.AppException.ValidationException">
            <summary>
            是否是数据验证异常
            </summary>
        </member>
        <member name="P:Fast.NET.AppException.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.NET.UserFriendlyException">
            <summary>
            <see cref="T:Fast.NET.UserFriendlyException"/> 用户友好异常
            </summary>
        </member>
        <member name="M:Fast.NET.UserFriendlyException.#ctor">
            <summary>
            <inheritdoc cref="T:Fast.NET.UserFriendlyException" />
            </summary>
        </member>
        <member name="M:Fast.NET.UserFriendlyException.#ctor(System.String)">
            <summary>
            <inheritdoc cref="T:Fast.NET.UserFriendlyException" />
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Fast.NET.UserFriendlyException.#ctor(System.String,System.Object)">
            <summary>
            <inheritdoc cref="T:Fast.NET.UserFriendlyException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="errorCode">错误编码</param>
        </member>
        <member name="M:Fast.NET.UserFriendlyException.#ctor(System.String,System.Exception)">
            <summary>
            <inheritdoc cref="T:Fast.NET.UserFriendlyException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Fast.NET.UserFriendlyException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            <inheritdoc cref="T:Fast.NET.UserFriendlyException" />
            </summary>
            <param name="message">异常信息</param>
            <param name="errorCode">错误编码</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.ErrorMessage">
            <summary>
            错误消息（支持 Object 对象）
            </summary>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.ValidationException">
            <summary>
            是否是数据验证异常
            </summary>
        </member>
        <member name="P:Fast.NET.UserFriendlyException.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.NET.ExceptionMetadata">
            <summary>
            <see cref="T:Fast.NET.ExceptionMetadata"/> 异常元数据
            </summary>
        </member>
        <member name="P:Fast.NET.ExceptionMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.NET.ExceptionMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.NET.ExceptionMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.NET.ExceptionMetadata.Errors">
            <summary>
            错误对象（信息）
            </summary>
        </member>
        <member name="P:Fast.NET.ExceptionMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.NET.ValidationMetadata">
            <summary>
            <see cref="T:Fast.NET.ValidationMetadata"/> 验证信息元数据
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.ValidationResult">
            <summary>
            验证结果
            </summary>
            <remarks>返回字典或字符串类型</remarks>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.Message">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.ModelState">
            <summary>
            验证状态
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.FirstErrorProperty">
            <summary>
            首个错误属性
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.FirstErrorMessage">
            <summary>
            首个错误消息
            </summary>
        </member>
        <member name="P:Fast.NET.ValidationMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.CommunalResources.Extensions.ExceptionExtension">
            <summary>
            <see cref="T:System.Exception"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.CommunalResources.Extensions.ExceptionExtension.StatusCode(Fast.NET.AppException,System.Int32)">
            <summary>
            设置异常状态码
            </summary>
            <param name="exception"><see cref="T:Fast.NET.AppException"/></param>
            <param name="statusCode"><see cref="T:System.Int32"/></param>
            <returns><see cref="T:Fast.NET.AppException"/></returns>
        </member>
        <member name="M:Fast.CommunalResources.Extensions.ExceptionExtension.WithData(Fast.NET.AppException,System.Object)">
            <summary>
            设置额外数据
            </summary>
            <param name="exception"><see cref="T:Fast.NET.AppException"/></param>
            <param name="data"><see cref="T:System.Object"/></param>
            <returns><see cref="T:Fast.NET.AppException"/></returns>
        </member>
        <member name="M:Fast.CommunalResources.Extensions.ExceptionExtension.StatusCode(Fast.NET.UserFriendlyException,System.Int32)">
            <summary>
            设置异常状态码
            </summary>
            <param name="exception"><see cref="T:Fast.NET.UserFriendlyException"/></param>
            <param name="statusCode"><see cref="T:System.Int32"/></param>
            <returns><see cref="T:Fast.NET.UserFriendlyException"/></returns>
        </member>
        <member name="M:Fast.CommunalResources.Extensions.ExceptionExtension.WithData(Fast.NET.UserFriendlyException,System.Object)">
            <summary>
            设置额外数据
            </summary>
            <param name="exception"><see cref="T:Fast.NET.UserFriendlyException"/></param>
            <param name="data"><see cref="T:System.Object"/></param>
            <returns><see cref="T:Fast.NET.UserFriendlyException"/></returns>
        </member>
        <member name="T:Fast.DynamicApplication.ApiDescriptionSettingsAttribute">
            <summary>
            接口描述设置
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="enabled">是否启用</param>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="groups">分组列表</param>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Name">
            <summary>
            自定义名称
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.KeepName">
            <summary>
            保留原有名称（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.SplitCamelCase">
            <summary>
            切割骆驼命名（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.AsLowerCamelCase">
            <summary>
            小驼峰命名（首字符小写）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.KeepVerb">
            <summary>
            保留路由谓词（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.LowercaseRoute">
            <summary>
            小写路由（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Module">
            <summary>
            模块名
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Groups">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Area">
            <summary>
            配置控制器区域（只对控制器有效）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Description">
            <summary>
            额外描述，支持 HTML
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.ForceWithRoutePrefix">
            <summary>
            强制携带路由前缀，即使使用 [Route] 重写，仅对 Class/Controller 有效
            </summary>
        </member>
        <member name="T:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention">
            <summary>
            动态接口控制器应用模型转换器
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention._nameVersionRegex">
            <summary>
            带版本的名称正则表达式
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention._services">
            <summary>
            服务集合
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.commonTemplatePattern">
            <summary>
            模板正则表达式
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            构造函数
            </summary>
            <param name="services">服务集合</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            配置应用模型信息
            </summary>
            <param name="application">引用模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureController(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.ValueTuple{System.String,System.Int32,System.Type}})">
            <summary>
            配置控制器
            </summary>
            <param name="controller">控制器模型</param>
            <param name="controllerApiDescriptionSettings">接口描述配置</param>
            <param name="controllerOrderCollection"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerArea(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置控制器区域
            </summary>
            <param name="controller"></param>
            <param name="controllerApiDescriptionSettings"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerName(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置控制器名称
            </summary>
            <param name="controller">控制器模型</param>
            <param name="controllerApiDescriptionSettings">接口描述配置</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureAction(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Boolean)">
            <summary>
            配置动作方法
            </summary>
            <param name="action">控制器模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings">控制器接口描述配置</param>
            <param name="hasApiControllerAttribute">是否贴有 ApiController 特性</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionApiExplorer(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            配置动作方法接口可见性
            </summary>
            <param name="action">动作方法模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionName(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置动作方法名称
            </summary>
            <param name="action">动作方法模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionHttpMethodAttribute(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            配置动作方法请求谓词特性
            </summary>
            <param name="action">动作方法模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureClassTypeParameter(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            处理类类型参数（添加[FromBody] 特性）
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionRouteAttribute(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            配置动作方法路由特性
            </summary>
            <param name="action">动作方法模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings">控制器接口描述配置</param>
            <param name="isLowercaseRoute"></param>
            <param name="isKeepName"></param>
            <param name="isLowerCamelCase"></param>
            <param name="hasApiControllerAttribute"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.GenerateControllerRouteTemplate(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            生成控制器路由模板
            </summary>
            <param name="controller"></param>
            <param name="apiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerAndActionName(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.String,System.Func{System.String,System.String},Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.String)">
            <summary>
            配置控制器和动作方法名称
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="orignalName"></param>
            <param name="configure"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <param name="actionName">针对 [ActionName] 特性和 [HttpMethod] 特性处理</param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsKeepName(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否设置了 KeepName参数
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsLowerCamelCase(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否设置了 AsLowerCamelCase 参数
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsSplitCamelCase(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            判断切割命名参数是否配置
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsLowercaseRoute(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否启用小写路由
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ResolveNameVersion(System.String)">
            <summary>
            解析名称中的版本号
            </summary>
            <param name="name">名称</param>
            <returns>名称和版本号</returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.HandleRouteTemplateRepeat(System.String)">
            <summary>
            处理路由模板重复参数
            </summary>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.IDynamicApplication">
            <summary>
            <see cref="T:Fast.DynamicApplication.IDynamicApplication"/> 动态API应用依赖接口
            </summary>
        </member>
        <member name="T:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 动态API应用拓展类
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension.AddDynamicApiControllers(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            添加动态接口控制器服务
            </summary>
            <param name="mvcBuilder"><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>Mvc构建器</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>Mvc构建器</returns>
        </member>
        <member name="M:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension.AddDynamicApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加动态接口控制器服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter">
            <summary>
            text/plain 请求 Body 参数支持
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <summary>
            重写 <see cref="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)"/>
            </summary>
            <param name="context"></param>
            <param name="effectiveEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Internal.Penetrates">
            <summary>
            常量、公共方法配置类
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Internal.Penetrates.GroupSeparator">
            <summary>
            分组分隔符
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Internal.Penetrates.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Internal.Penetrates.IsApiControllerCached">
            <summary>
            <see cref="M:Fast.DynamicApplication.Internal.Penetrates.IsApiController(System.Type)"/> 缓存集合
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Internal.Penetrates.IsApiController(System.Type)">
            <summary>
            是否是Api控制器
            </summary>
            <param name="type">type</param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Providers.DynamicApplicationFeatureProvider">
            <summary>
            动态API引用特性提供器
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Providers.DynamicApplicationFeatureProvider.IsController(System.Reflection.TypeInfo)">
            <summary>
            扫描控制器
            </summary>
            <param name="typeInfo">类型</param>
            <returns>bool</returns>
        </member>
    </members>
</doc>
